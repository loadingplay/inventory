{"version":3,"sources":["webpack:///./src/pages/dashboard.jsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","target","props","descriptor","_toPropertyKey","_setPrototypeOf","o","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_defineProperty","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","DashboardPage","_Component","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","h","a","r","access_token","window","localStorage","getItem","setState","document","hj","q","_hjSettings","hjid","hjsv","getElementsByTagName","createElement","src","appendChild","is_loading","has_error","stock_error_message","json_data","status","message","products","replenishments","page_count","_ref","_callee","hq_cellar_id","selected_cellar_id","page","search_term","search_type","store_loader","_context","extra_products","PickerStore","getAllExtras","setLoadingState","StoreLoader","loadProducts","handleLoadedState","handlePageCountLoaded","Math","ceil","metadata","count","loadStoreInventory","_x","_x2","_x3","_x4","_x5","skus","cellars","new_products","inventory","map","item","sku","StockLoader","load","loaded_cellar","find","element","product_sku","current_inventory","balance_units","hq_inventory","_ref2","_callee2","barcode","product","response","_context2","is_extra","fetch","concat","headers","json","set","get","_x6","_x7","_ref3","_callee3","input_string","inventories","_context3","is_scanner_loading","addNewSKU","load_key","cellar_id","suggested","clearTimeout","to","_x8","_x9","_x10","React","DashboardWithScanner","_extends","loadKey","accessToken","onInventoryRequest","handleInventoryRequest","pageCount","isScannerLoading","onScannerRead","handleScannerRead","onPickerClear","handlePickerClear","extraProducts","isLoading","hasError","stockErrorMessage","Component"],"mappings":"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","file":"component---src-pages-dashboard-jsx-1b1978025e3d83473f56.js","sourcesContent":["import React, { Component } from 'react';\nimport { StockLoader, StoreLoader } from \"../library/services\";\nimport { PickerStore } from '../library/services';\nimport { DashboardWithScanner } from \"../library/components/dashboard\";\n\nexport default class DashboardPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: \"\",\n      page_count: 0,\n      extra_products: null,\n      products: null,\n      is_loading: false,\n      has_error: false,\n      stock_error_message: \"\",\n      load_key: 1,\n      is_scanner_loading: 0\n    };\n  }\n\n  componentDidMount = () => {\n    let access_token = window.localStorage.getItem(\"access_token\");\n    this.setState({ access_token });\n\n    if (typeof window !== 'undefined') {\n      (function(h,o,t,j,a,r){\n        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n        h._hjSettings={hjid:1607292,hjsv:6};\n        a=o.getElementsByTagName('head')[0];\n        r=o.createElement('script');r.async=1;\n        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n        a.appendChild(r);\n      })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');\n    }\n  }\n\n  setLoadingState = () => {\n    this.setState({\n      is_loading: true,\n      has_error: false,\n      stock_error_message: \"\"\n    });\n  }\n\n  handleLoadedState = (json_data) => {\n    // handle status\n    if (json_data.status === \"error\") {\n      this.setState({\n        stock_error_message: json_data.message,\n        is_loading: false,\n        has_error: true\n      });\n\n      return false;\n    } else {\n      this.setState({\n        products: json_data.replenishments,\n        is_loading: false,\n        has_error: false,\n        stock_error_message: \"\"\n      });\n\n      return true;\n    }\n  }\n\n  handlePageCountLoaded = (page_count) => {\n    this.setState({\n      page_count\n    });\n  }\n\n  handleInventoryRequest = async (hq_cellar_id, selected_cellar_id, page, search_term, search_type) => {\n    let store_loader,\n    json_data;\n\n    this.setState({ extra_products: PickerStore.getAllExtras(selected_cellar_id) });\n    this.setLoadingState();\n\n    store_loader = new StoreLoader(this.state.access_token);\n    json_data = await store_loader.loadProducts(page, selected_cellar_id, search_term, search_type);\n\n    if (!this.handleLoadedState(json_data)) return;  // handle errors\n    this.handlePageCountLoaded(Math.ceil(json_data.metadata.count / 100));\n\n    // load current inventory\n    if (json_data.replenishments)\n      this.loadStoreInventory(hq_cellar_id, selected_cellar_id, json_data.replenishments);\n  }\n\n\n  loadStoreInventory = (hq_cellar_id, selected_cellar_id, products) => {\n\n    let skus,\n      cellars,\n      new_products,\n      inventory;\n\n    // early termination\n    if (products === undefined) return;\n\n    skus = products.map((item) => {\n      return item.sku;\n    });\n    cellars = selected_cellar_id === hq_cellar_id ? [selected_cellar_id] : [selected_cellar_id, hq_cellar_id];\n\n    StockLoader(this.state.access_token)\n      .load(cellars, skus)\n      .done((loaded_cellar, products) => {\n        if (!this.state.products) return;\n\n        new_products = this.state.products.map((item) => {\n          inventory = products.find((element) => {\n            return item.sku === element.product_sku;\n          });\n\n          if (loaded_cellar === selected_cellar_id) {\n            if (item.current_inventory === undefined) {\n              item.current_inventory = inventory !== undefined ? inventory.balance_units : undefined;\n            }\n          }\n\n          if (loaded_cellar === hq_cellar_id) {\n            if (item.hq_inventory === undefined) {\n              item.hq_inventory = inventory !== undefined ? inventory.balance_units : undefined;\n            }\n          }\n          return item;\n        });\n\n        this.setState({ products: new_products });\n      });\n  }\n\n  addNewSKU = async (selected_cellar_id, barcode) => {\n    // create product structure\n    let product = { sku: barcode, name: \"test\", barcode: barcode, is_extra: true };\n    // find product in api\n    let response = await fetch(\n      `https://apibodegas.loadingplay.com/v1/product/${barcode}`,\n      {\n        headers: {\n          \"Authorization\": `Bearer ${this.state.access_token}`\n        }\n      }\n    );\n    let json_data = await response.json();\n\n    if (response.status === 200 && json_data.status !== \"error\") {\n      product.sku = json_data.product.sku\n    }\n\n    // agregar +1 en picker\n    PickerStore.set(\n      selected_cellar_id,\n      product.sku,\n      PickerStore.get(selected_cellar_id, product.sku) + 1,\n      0, 0, 0, true, product\n    );\n  }\n\n  handleScannerRead = async (hq_cellar_id, selected_cellar_id, input_string) => {\n    let store_loader, json_data, product, cellars, q, inventories = {}, to;\n\n    this.setState({ is_scanner_loading: this.state.is_scanner_loading + 1 });\n\n    // search product\n    store_loader = new StoreLoader(this.state.access_token);\n    json_data = await store_loader.loadProducts(1, selected_cellar_id, input_string);\n    if (!json_data.replenishments || json_data.replenishments.length === 0) {\n      await this.addNewSKU(selected_cellar_id, input_string);\n      this.setState({\n        is_scanner_loading: this.state.is_scanner_loading - 1,\n        extra_products: PickerStore.getAllExtras(selected_cellar_id),\n        load_key: this.state.load_key + 1\n      });\n      return;\n    }\n\n    product = json_data.replenishments[0];\n    cellars = selected_cellar_id === hq_cellar_id ? [selected_cellar_id] : [selected_cellar_id, hq_cellar_id];\n\n    StockLoader(this.state.access_token)\n    .load(cellars, [product.sku])\n    .done((cellar_id, products) => {\n      inventories[cellar_id] = products[0].balance_units;\n\n      if (Object.keys(inventories).length === cellars.length)\n      {\n        q = PickerStore.get(selected_cellar_id, product.sku);\n        PickerStore.set(\n          selected_cellar_id,\n          product.sku,\n          q + 1,\n          inventories[hq_cellar_id],\n          inventories[selected_cellar_id],\n          product.suggested\n        );\n        clearTimeout(to);\n        this.setState({ load_key: this.state.load_key + 1, is_scanner_loading: this.state.is_scanner_loading - 1 });\n      }\n    });\n  }\n\n  handlePickerClear = () => {\n    this.setState({ load_key: this.state.load_key + 1 });\n  }\n\n  render = () => {\n    return (\n      <DashboardWithScanner\n        loadKey={this.state.load_key}\n        accessToken={this.state.access_token}\n        onInventoryRequest={this.handleInventoryRequest}\n        pageCount={this.state.page_count}\n\n        isScannerLoading={this.state.is_scanner_loading}\n        onScannerRead={this.handleScannerRead}\n        onPickerClear={this.handlePickerClear}\n\n        extraProducts={this.state.extra_products}\n        products={this.state.products}\n        isLoading={this.state.is_loading}\n        hasError={this.state.has_error}\n        stockErrorMessage={this.state.stock_error_message}\n\n        {...this.props}\n      ></DashboardWithScanner>\n    );\n  }\n}\n"],"sourceRoot":""}